main:
    params: [config]
    steps:
        - vars:
            assign:
                - user_id: ${config.userId}
                - transcript_id: ${config.transcriptId}
                - exec_id: ${sys.get_env("GOOGLE_CLOUD_WORKFLOW_EXECUTION_ID")}
                - function_root: ${"https://europe-west2-" + sys.get_env("GOOGLE_CLOUD_PROJECT_ID") + ".cloudfunctions.net/"}

        - transcode_envelope:
            call: http.get
            args:
              url: ${function_root + "transcode_envelope"}
              query:
                user: ${user_id}
                transcript: ${transcript_id}
              auth:
                type: OIDC
            result: transcode_envelope_response
        - transcode_envelope_check:
            call: assert_2xx
            args:
              status: ${transcode_envelope_response.code}

        - charge_credit:
            call: http.get
            args:
              url: ${function_root + "charge_credit"}
              query:
                user: ${user_id}
                transcript: ${transcript_id}
              auth:
                type: OIDC
            result: charge_credit_response
        - charge_credit_check:
            call: assert_2xx
            args:
              status: ${charge_credit_response.code}

        - transcribe:
            call: http.get
            args:
              url: ${function_root + "transcribe"}
              query:
                user: ${user_id}
                transcript: ${transcript_id}
              auth:
                type: OIDC
            result: transcribe_response
        - transcribe_check:
            call: assert_2xx
            args:
              status: ${transcribe_response.code}

        - success:
            return: "SUCCESS"

assert_2xx:
  params: [status]
  steps:
  - compare:
      switch:
      - condition: ${status >= 200 AND status < 300}
        next: end
  - fail:
      raise: ${"Expected 2xx http response, actually " + status}
