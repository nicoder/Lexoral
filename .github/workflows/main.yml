name: AutomaticHost

on:
  push:
    branches:
      - master

jobs:
  build-dashboard:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - run: npm ci
      working-directory: frontend/dashboard
    - run: npm run build
      working-directory: frontend/dashboard
    - uses: actions/upload-artifact@v2
      with:
        name: dashboard
        path: frontend/dashboard/public

  build-editor:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - run: npm ci
      working-directory: frontend/editor
    - run: npm run build
      working-directory: frontend/editor
    - uses: actions/upload-artifact@v2
      with:
        name: editor
        path: frontend/editor/public

  build-landing:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/upload-artifact@v2
      with:
        name: landing
        path: frontend/landing

  build-demo:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/upload-artifact@v2
      with:
        name: demo
        path: frontend/demo

        commit-gh-pages:
          needs: [build-editor, build-landing, build-demo]
          runs-on: ubuntu-latest
      
          steps:
          - uses: actions/checkout@v2
          - run: |
              git config --local user.email "action@github.com"
              git config --local user.name "GitHub Action"
              git checkout --orphan gh-pages
              git reset --hard
          - uses: actions/download-artifact@v2
            with:
              name: demo
              path: demo
          - uses: actions/download-artifact@v2
            with:
              name: editor
              path: editor
          - uses: actions/download-artifact@v2
            with:
              name: landing
          - uses: actions/download-artifact@v2
            with:
              name: dashboard
              path: dashboard
          - run: |
              git add ./*
              git commit -m "Update hosted version"
          - uses: ad-m/github-push-action@master
            with:
              github_token: ${{ secrets.GITHUB_TOKEN }}
              force: true
              branch: gh-pages




  build-functions:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        functionName:
          - adjust
          - align
          - charge_credit
          - fetch
          - patch
          - signup
          - transcode_envelope
          - transcode_playback
          - transcode_transcription
          - transcribe
          - transcription_watcher
          - upload
          - upload_watcher

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - run: npm i -g dry-dry
    - run: dry ci && dry run build
      working-directory: functions/${{ matrix.functionName }}
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.functionName }}
        path: functions/${{ matrix.functionName }}/dist

  deploy:
    needs: [build-functions, build-editor, build-demo, build-landing]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
        name: editor
        path: terraform/website/editor

    - uses: actions/download-artifact@v2
        with:
          name: demo
          path: terraform/website/demo

    - uses: actions/download-artifact@v2
        with:
          name: landing
          path: terraform/website

    - uses: actions/download-artifact@v2
        with:
          name: dashboard
          path: terraform/website/dashboard

    - uses: actions/download-artifact@v2
      with:
        path: terraform/functions
    - uses: hashicorp/setup-terraform@v1
    - run: terraform init
      working-directory: terraform 
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
    - run: terraform apply -auto-approve
      working-directory: terraform
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
